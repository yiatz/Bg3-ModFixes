new entry "MAG_Fire_HeatOnTakingFireDamage_Amulet_Passive"
type "PassiveData"
using "MAG_Fire_HeatOnTakingFireDamage_Amulet_Passive"
data "Conditions" "(IsSpell() or IsCantrip()) and HasDamageDoneForType(DamageType.Fire) and not Ally() and HasStatus('MAG_FIRE_HEAT_CONVERGENCE',context.Source) and (IsMetalItem() or HasMetalWeaponInAnyHand() or HasMetalArmor() or IsMetalCharacter());"
data "StatsFunctors" "IF(RollDieAgainstDC(DiceType.d100,80)):ApplyStatus(SYR_FIREHEART_HEAT_METAL_EFFECT,100,0)"

new entry "SYR_FIREHEART_HEAT_METAL_EFFECT"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "hd490cde8gd68egd4d2g3e3dga14fd69b79fa;1"
data "Icon" "Spell_Transmutation_HeatMetal"
data "SoundStart" "Spell_Impact_Damage_HeatMetal_L1to3"
data "StackId" "SYR_FIREHEART_HEAT_METAL_EFFECT"
data "StackType" "Overwrite"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator"
data "OnApplyFunctors" "IF(IsMetalItem()):ApplyStatus(HEAT_METAL,100,3);IF(not IsMetalItem() and HasMetalWeapon(context.Target, true)):ApplyEquipmentStatus(MainHand,HEAT_METAL,100,3);IF(not IsMetalItem() and not HasMetalWeapon(context.Target, true) and HasMetalWeapon(context.Target, false)):ApplyEquipmentStatus(OffHand,HEAT_METAL,100,3);IF(not IsMetalItem() and not HasMetalWeapon(context.Target, true) and not HasMetalWeapon(context.Target, false) and HasMetalArmor() and Party()):ApplyEquipmentStatus(Breast,HEAT_METAL,100,3);IF(not IsMetalItem() and not HasMetalWeapon(context.Target, true) and not HasMetalWeapon(context.Target, false) and HasMetalArmor() and not Party()):ApplyStatus(HEAT_METAL,100,3);IF(not IsMetalItem() and not HasMetalWeapon(context.Target, true) and not HasMetalWeapon(context.Target, false) and HasMetalArmor() and not Party()):ApplyStatus(HEAT_METAL_DISADVANTAGE,100,3);IF(IsMetalCharacter()):ApplyStatus(HEAT_METAL,100,3);IF(IsMetalCharacter()):ApplyStatus(HEAT_METAL_DISADVANTAGE,100,3)"
data "OnApplyRoll" "HeatMetalInitialCheck(Ability.Constitution, SourceSpellDC())"
data "OnApplySuccess" "ApplyStatus(DISARM,100,0)"
data "OnApplyFail" "ApplyStatus(HEAT_METAL_DISADVANTAGE,100,1)"
data "ApplyEffect" "03f4d628-7530-4698-a068-070c4eac50c6"

new entry "CC_Sorcerer_Equipment_Essence_Weavers_Gloves"
type "Armor"
using "CC_Sorcerer_Equipment_Essence_Weavers_Gloves"
data "PassivesOnEquip" "CC_CharismaticForce_Passive_Boosted"

new entry "Tut_CC_Sorcerer_Equipment_Essence_Weavers_Gloves"
type "Armor"
using "Tut_CC_Sorcerer_Equipment_Essence_Weavers_Gloves"
data "PassivesOnEquip" "CC_CharismaticForce_Passive_Boosted"

new entry "CC_CharismaticForce_Passive_Boosted"
type "PassiveData"
data "DisplayName" "h27ad4a5fg8ebeg4b8egb71dg81a7d073b009;1"
data "Description" "h27ad4a5fg8ebeg4b8egb71dg81a7d073b010;1"
data "DescriptionParams" "DealDamage(,Force);DealDamage(,Radiant);DealDamage(,Psychic)"
data "Icon" "PassiveFeature_Generic_Magical"
data "Properties" "OncePerTurn"
data "BoostContext" "OnCreate"
data "Conditions" "IsSpell()"
data "Boosts" "IF(HasDamageDoneForType(DamageType.Force)):DamageBonus(max(CharismaModifier/2,0), Force);IF(HasDamageDoneForType(DamageType.Radiant)):DamageBonus(max(CharismaModifier/2,0), Radiant);IF(HasDamageDoneForType(DamageType.Psychic)):DamageBonus(max(CharismaModifier/2,0), Psychic);"

new entry "DruidEquipmentAct3_Ring_of_the_Stormspeaker"
type "Armor"
using "DruidEquipmentAct3_Ring_of_the_Stormspeaker"
data "PassivesOnEquip" "GG_Three_Druid_Concentration_Passive;MAG_SpellSaveDC_Enchantment_Lesser_Passive;GG_Three_IncreasedElementalDamage_Passive_Boosted"

new entry "Tut_DruidEquipmentAct3_Ring_of_the_Stormspeaker"
type "Armor"
using "Tut_DruidEquipmentAct3_Ring_of_the_Stormspeaker"
data "PassivesOnEquip" "GG_Three_Druid_Concentration_Passive;MAG_SpellSaveDC_Enchantment_Lesser_Passive;GG_Three_IncreasedElementalDamage_Passive_Boosted"

new entry "GG_Three_IncreasedElementalDamage_Passive_Boosted"
type "PassiveData"
data "DisplayName" "hff40c57bg4398g48afgb373gfa95d7f607e46;1"
data "Description" "hff40c57bg4398g48afgb373gfa95d7f607e47;1"
data "DescriptionParams" "DealDamage(,Lightning);DealDamage(,Thunder);DealDamage(,Cold);1d4"
data "Icon" "GG_Three_WrathSky_Icon"
data "Properties" "OncePerAttack"
data "BoostContext" "OnCreate"
data "Conditions" "IsSpell()"
data "Boosts" "IF(HasDamageDoneForType(DamageType.Thunder)):DamageBonus(1d6, Thunder);IF(HasDamageDoneForType(DamageType.Lightning)):DamageBonus(1d6, Lightning);IF(HasDamageDoneForType(DamageType.Cold)):DamageBonus(1d6, Cold);"

new entry "Projectile_MAG_IceKnife"
type "SpellData"
using "Projectile_MAG_IceKnife"
data "Cooldown" "OncePerCombat"